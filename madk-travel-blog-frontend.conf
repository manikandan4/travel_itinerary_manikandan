server {
    listen 80;
    listen [::]:80;

    # Match the server names from your existing Nginx config
    server_name madk-travel-blog.kandan4.xyz *.local; 

    # IMPORTANT: The root path is now inside the Docker container
    root /usr/share/nginx/html; 
    
    index index.html index.htm index.nginx-debian.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Proxy API requests to backend
    location /auth/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Handle login page (publicly accessible)
    location = /login.html {
        try_files $uri $uri/ =404;
    }

    location = /css/login_styles.css {
        try_files $uri $uri/ =404;
    }

    location = /js/login.js {
        try_files $uri $uri/ =404;
    }

    # Handle static assets for login page
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri $uri/ =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Protected routes - all other pages
    location / {
        # First try to serve the file directly
        try_files $uri $uri/ @protected;
    }

    # Protected location block
    location @protected {
        # For now, serve files directly. In production, you might want
        # to add authentication check here via auth_request module
        try_files $uri $uri/ /index.html;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Log to stdout/stderr for easier viewing with 'docker logs'
    access_log /dev/stdout;
    error_log /dev/stderr info;
}
